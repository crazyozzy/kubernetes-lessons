17)
docker build -t test_resource -<<EOF
 
FROM alpine
ENTRYPOINT ["sleep"]
CMD ["3600"]
EOF

18)
`docker run --name test_resource  --memory=100m --cpu=".2" --rm -d test_resource`

19)
systemd-cgls
cd /sys/fs/cgroup/memory/docker/SHA_контейнера

20) 
cat memory.limit_in_bytes | awk '{$1=$1/1024/1024; print}'

24)
apt install cgroup-tools

25)
cgget docker/SHA

26)
cgget -r memory.limit_in_bytes  docker/SHA
cgget -r cpu.cfs_quota_us  docker/SHA

27)
docker stop $(docker ps -q)

--------------------
### Docker Volume

1) 
docker build -t redis_1 -<<EOF

FROM redis
VOLUME /data

EOF

2)
docker run --rm -d --name redis_1 redis_1
docker volume ls

4)
docker run --rm -d --mount type=volume,source=data,destination=/data --name redis_1 redis_1

5)
ls /var/lib/docker/volumes/data/_data

6)
docker exec -it redis_1 bash
redis-cli
set mykey foobar
save
quit

ls
exit

7)
ls /var/lib/docker/volumes/data/_data

9)
docker run --rm -d --mount type=volume,source=data,destination=/data --name redis_1 redis_1

### Docker-compose

1)
docker-compose version
